<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>效果</title>
    <script src="libs/Cesium/Cesium.js"></script>
    <link
      href="libs/Cesium/Widgets/widgets.css"
      rel="stylesheet"
    />
    <style>
      html,
      body {
        height: 100%;
      }

      * {
        margin: 0;
        padding: 0;
      }

      .cesium-viewer-bottom {
        display: none;
      }
    </style>
  </head>
  <body>
    <div id="cesiumContainer" style="width: 100%; height: 100%"></div>
    <script src="libs/CesiumPlugin/cesium-plugin.js"></script>
    <script>
      const viewer = new CesiumPlugin.Viewer("cesiumContainer");
      let groundSkybox = new CesiumPlugin.GroundSkyBox({
        sources: {
          positiveX: "./images/skybox/right.png",
          negativeX: "./images/skybox/left.png",
          positiveY: "./images/skybox/front.png",
          negativeY: "./images/skybox/back.png",
          positiveZ: "./images/skybox/top.png",
          negativeZ: "./images/skybox/bottom.png",
        },
        // sources: {
        //   positiveX: "./images/skybox2/px.png",
        //   negativeX: "./images/skybox2/nx.png",
        //   positiveY: "./images/skybox2/pz.png",
        //   negativeY: "./images/skybox2/nz.png",
        //   positiveZ: "./images/skybox2/py.png",
        //   negativeZ: "./images/skybox2/ny.png",
        // },
      });

      // 自带的默认天空盒
      let defaultSkybox = viewer.scene.skyBox;

      // 渲染前监听并判断相机位置
      viewer.scene.preUpdate.addEventListener(() => {
        let position = viewer.scene.camera.position;
        let cameraHeight = Cesium.Cartographic.fromCartesian(position).height;
        if (cameraHeight < 240000) {
          viewer.scene.skyBox = groundSkybox;
          viewer.scene.skyAtmosphere.show = false;
        } else {
          viewer.scene.skyBox = defaultSkybox;
          viewer.scene.skyAtmosphere.show = true;
        }
      });

      const camera = {
        lat: 31.830035,
        lng: 117.159801,
        alt: 409,
        heading: 41,
        pitch: 0,
      };
      const pos = Cesium.Cartesian3.fromDegrees(
        camera.lng,
        camera.lat,
        camera.alt
      );
      viewer.scene.camera.flyTo({
        destination: pos,
        orientation: {
          heading: camera.heading,
          pitch: camera.pitch,
          roll: 0,
        },
      });
    </script>
  </body>
</html>
